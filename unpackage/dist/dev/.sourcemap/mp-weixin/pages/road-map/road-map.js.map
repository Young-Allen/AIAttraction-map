{"version":3,"sources":["uni-app:///main.js",null,"webpack:///F:/Studying Code/小程序/uni-map02/pages/road-map/road-map.vue?a419","webpack:///F:/Studying Code/小程序/uni-map02/pages/road-map/road-map.vue?8832","webpack:///F:/Studying Code/小程序/uni-map02/pages/road-map/road-map.vue?6040","uni-app:///pages/road-map/road-map.vue","webpack:///F:/Studying Code/小程序/uni-map02/pages/road-map/road-map.vue?bd83","webpack:///F:/Studying Code/小程序/uni-map02/pages/road-map/road-map.vue?0e7f"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","key","components","midTabbar","movableSwiper","xiaoStarComponent","zqsSelect","HmSmsListCard","cmdProgress","computed","watch","activePoint","data","pointCrowds","isGetLocation","isShowRoadContent","getCrowdsTimer","_mapContext","polyline","staticRoad","roadList","staticRoadPolyline","dynamicPoint","dynamicRoad","dynamicRoadPolyline","vipRoad","vipRoadPolyline","vipRoadSpendTime","threeRoadOne","spendTime","position","notice","options","recommendations","checkPointList","sortCheckPointList","wantToGoList","dynamicCrowds","scanPoint","id","name","score","roadContent","iconPath","selectedIconPath","text","active","onReady","that","enableDefaultStyle","zoomOnClick","gridSize","attractionApi","res","uni","url","header","success","console","onLoad","onUnload","clearInterval","methods","gotoPos","roadApi","chooseTab","getStaticRoad","i","from","to","longitude","latitude","setTimeout","addPointPolyline","qqmapsdk","mode","pl","coors","addPolyline","points","color","width","arrowLine","borderWidth","dialogInputConfirm","scanBtn","title","duration","moveToLocation","toPointDetail","clickCard","selectChange2","selectPoint","icon","uniqueIds","temp","lat","lng","getDistance","_this","result","pointIds","vipRoadId","searchEvent","switchSpot","change","trigger","obj","pageTabL","tapMap","pageTabML","pageTabMM","pageTabMR","userApi","addUserMarker","markerIds","markers","height","anchor","x","y","clear","complete","addMarkers","pointMarkers","joinCluster","callout","content","borderRadius","bgColor","padding","textAlign","display","addGroundOverlay","markertap","primary","openNote","paybak","capacity","current","txt","side","setMapBoundary","southwest","northeast","scale"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,gBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AACrH;AAC4D;AACL;AACc;;;AAGrE;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,uFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,qOAEN;AACP,KAAK;AACL;AACA,aAAa,6SAEN;AACP,KAAK;AACL;AACA,aAAa,8OAEN;AACP,KAAK;AACL;AACA,aAAa,gQAEN;AACP,KAAK;AACL;AACA,aAAa,gQAEN;AACP,KAAK;AACL;AACA,aAAa,4NAEN;AACP,KAAK;AACL;AACA,aAAa,sTAEN;AACP,KAAK;AACL;AACA,aAAa,oMAEN;AACP,KAAK;AACL;AACA,aAAa,gNAEN;AACP,KAAK;AACL;AACA,aAAa,gWAEN;AACP,KAAK;AACL;AACA,aAAa,uPAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAkmB,CAAgB,4nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;AC6GtnB;AAGA;AAWA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBA;AACA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAmBA;AACA;EACAC;AACA;AAAA,eAGA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC,wDAEA,kFACA,sGACA,qEACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACA;MACAC;MACA;MACAC;QACAC;MACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA;IAEA;EACA;EAEAC;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC;cACA;;cAEA;cACA;gBACAC;gBACAC;gBACAC;cACA;;cAEA;cACA;;cAEA;cACAC;gBACA;cACA;;cAEA;cAAA;cAAA,OACAA;YAAA;cAAAC;cACA;;cAEA;cACA;;cAEA;cACA;;cAEA;cACA;cAEA;gBACAV;cACA;cAEA;cAEAW;gBACAC;gBACAC;kBACA;gBACA;gBACAC;kBACAC;gBACA;cACA;cACAJ;gBACAI;gBACAV;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEA;EAEAW;IAAA;IACA;IACA;MACA;MACA;IACA,8CAEA;;IAEA;IACA;MACA;MACAP;QACA;QACAM;MACA;IACA;EACA;EAEAE;IACAN;MACAI;IACA;IACAG;IACA;EACA;EAEAC,qEACA,0GACA,kBACA,IACA,oFACA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAL;gBACAA;gBAAA;gBAAA,OACAM;cAAA;gBAAAzC;gBACAmC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IAEA;IACAO;MACA;QACA;MACA;QACA;UAAA;QAAA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACAF;QACAN;QACA;QACA;QACA;UAAA;QAAA;QACA;QACA;QAAA,2BACAS;UACA;YACAC;UACA;YACAC;cACAC;cACAC;YACA;UACA;YACAF;cACAC;cACAC;YACA;UACA;UACA;YACAH;cACAE;cACAC;YACA;UACA;YACAH;cACAE;cACAC;YACA;UACA;UACA;UACAC;YACAxB;UACA;QAAA;QA5BA;UAAA;QA6BA;QAEA;MACA;IACA;IAEA;IACAyB;MACA;MACA;MACAC;QACAC;QAAA;QACAP;QACAC;QACAZ;UACAC;UACA;YACAkB;UACA;UACA;YACAC;UACA;UACA;UACA;YACAD;cACAL;cACAD;YACA;UACA;UACAtB;QACA;MACA;IACA;IAEA;IACA8B;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IAEA;IACAC;MACAhC;QACAM;MACA;MACA;MACA;IACA;IAEA;IACA2B;MACA;MACA;MACA/B;QACAG;UACA;YACA;YACAT;YACAU;YACAV;UACA;YACAM;cACAgC;cACAC;YACA;UACA;QACA;MACA;IACA;IAEA;IACAC;MACA9B;MACA;QACAY;QACAC;MACA;IACA;IAEA;IACAkB;MACAnC;QACAC;MACA;IACA;IAEA;IACAmC;MACAhC;MACAJ;QACAC;MACA;IACA;IAEAoC;MACA;IAAA,CACA;IAEA;IACAC;MAAA;MACAlC;MACA;QAAAmC;QAAAP;QAAAC;MAAA;MAEA;MACAO;QACA;QACA;UAAA;QAAA;QACAC;QACAA;QACAA;UACAC;UACAC;QACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,gBACA;gBAAA;gBAAA,OACAzB;kBACA;kBACAN;kBAAA;kBACAC;kBAAA;kBACAZ;oBAAA;sBAAA;sBAAA;wBAAA;0BAAA;4BAAA;8BAAA;8BACA2C;8BACAA;gCACAD;8BACA;8BACAA;gCAAA;8BAAA;8BACAzC;8BACA2C;8BACAF;gCACAE;8BACA;8BAAA;8BAAA,OAIArC;4BAAA;8BAAA;8BADAsC;8BAEA5C;8BACAyC;8BACAA;8BACAA;8BACAA;8BACAG;gCACA;kCAAA;gCAAA;gCACAH;8BACA;8BACAA;gCAAA;8BAAA;8BACAA;8BACAA;8BACAA;8BAAA;gCAEA;kCACA/B;gCACA;kCACAC;oCACAC;oCACAC;kCACA;gCACA;kCACAF;oCACAC;oCACAC;kCACA;gCACA;gCACA;kCACAH;oCACAE;oCACAC;kCACA;gCACA;kCACAH;oCACAE;oCACAC;kCACA;gCACA;gCACA;gCACAC;kCACA2B;gCACA;8BAAA;8BA5BA;gCAAA;8BA6BA;8BACAzC;8BACAyC;4BAAA;4BAAA;8BAAA;0BAAA;wBAAA;sBAAA;oBAAA,CACA;oBAAA;sBAAA;oBAAA;oBAAA;kBAAA;gBACA;cAAA;gBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IAEA;IACAI;MAAA;MACA;MACAnD;QACA;MACA;IACA;IAEAoD;MACA;IACA;IAEA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACAC;MACA;MACA;QACA;QACA;QACA;MACA;QACA;QACA;MACA;QACA;QACA;QACA;MACA;MAEAhD;MACA;QACA;UACAiD;QACA;QACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACAtD;QACAG;UACA;YACAc;YACAD;UACA;UACA;UACA1E;YACA2D;YACAE;cACA;cACA;cACA;gBACAT;gBACAA;gBACA;gBACAU;cACA;gBACAV;gBACAM;kBACAgC;kBACAC;kBACAM;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;IAEA;IACAgB;MACA;MACAnD;MACA;QACA;QACA;QACA;QACA;MACA;IACA;IAEA;IACAoD;MACAxD;QACAC;MACA;IACA;IAEA;IACAwD;MACAzD;QACAC;MACA;IACA;IAEA;IACAyD;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBAAA;gBAAA,OACAC;cAAA;gBAAA;gBACA;kBACA;gBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IAEA;IACAC;MACA;QACAC;QACA1D;UACAC;QACA;MACA;MACA;QACA0D;UACA7E;UACAgC;UACAD;UACA3B;UACAsC;UACAoC;UACAC;YACAC;YACAC;UACA;QACA;QACAC;QACAC;UACAhE;QACA;MACA;IACA;IAEA;IACAiE;MAAA;MACAjE;MACA;MACAkE;QACA;UAAA;QAAA;QACAR;UACA7E;UACA+C;UACAf;UACAD;UACAuD;UACAlF;UACAsC;UACAoC;UACAC;YACAC;YACAC;UACA;UACAM;YACAC;YACA/C;YACA;YACAgD;YACAC;YACA;YACAC;YACAC;YACAC;UACA;QACA;MACA;MAEA;QACAhB;QACAK;QACAC;UACAhE;QACA;MACA;IACA;IAEA;IACA2E;MAAA;MACA;QACA;MACA;IACA;IAEA;IACAC;MACA;MACA;QAAA;MAAA;MACA5E;MACA;QAAA;MAAA;MACA;QACAnB;QACAgG;QACAC;QACAC;QACAhG;QACAiG;QACAC;QACAC;QACAC;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;QACAxE;QACAC;MACA;MACA;QACA;QACAD;QACAC;MACA;MACA;MACA;QACAwE;QACAC;QACAvF;UACAT;YACAuB;YACAD;YACA2E;UACA;QACA;MACA;IACA;EAAA;AAGA;AAAA,2B;;;;;;;;;;;;;AClzBA;AAAA;AAAA;AAAA;AAA6oC,CAAgB,mnCAAG,EAAC,C;;;;;;;;;;;ACAjqC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/road-map/road-map.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/road-map/road-map.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./road-map.vue?vue&type=template&id=0b664b66&\"\nvar renderjs\nimport script from \"./road-map.vue?vue&type=script&lang=js&\"\nexport * from \"./road-map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./road-map.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/road-map/road-map.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./road-map.vue?vue&type=template&id=0b664b66&\"","var components\ntry {\n  components = {\n    lTabs: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/l-tabs/components/l-tabs/l-tabs\" */ \"@/uni_modules/l-tabs/components/l-tabs/l-tabs.vue\"\n      )\n    },\n    uniNoticeBar: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-notice-bar/components/uni-notice-bar/uni-notice-bar\" */ \"@/uni_modules/uni-notice-bar/components/uni-notice-bar/uni-notice-bar.vue\"\n      )\n    },\n    uniFab: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-fab/components/uni-fab/uni-fab\" */ \"@/uni_modules/uni-fab/components/uni-fab/uni-fab.vue\"\n      )\n    },\n    uniPopup: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-popup/components/uni-popup/uni-popup\" */ \"@/uni_modules/uni-popup/components/uni-popup/uni-popup.vue\"\n      )\n    },\n    uniSteps: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-steps/components/uni-steps/uni-steps\" */ \"@/uni_modules/uni-steps/components/uni-steps/uni-steps.vue\"\n      )\n    },\n    movableSwiper: function () {\n      return import(\n        /* webpackChunkName: \"components/movable-swiper/movable-swiper\" */ \"@/components/movable-swiper/movable-swiper.vue\"\n      )\n    },\n    uniIcons: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-icons/components/uni-icons/uni-icons\" */ \"@/uni_modules/uni-icons/components/uni-icons/uni-icons.vue\"\n      )\n    },\n    zqsSelect: function () {\n      return import(\n        /* webpackChunkName: \"components/zqs-select/zqs-select\" */ \"@/components/zqs-select/zqs-select.vue\"\n      )\n    },\n    cmdProgress: function () {\n      return import(\n        /* webpackChunkName: \"components/cmd-progress/cmd-progress\" */ \"@/components/cmd-progress/cmd-progress.vue\"\n      )\n    },\n    uniPopupDialog: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-popup/components/uni-popup-dialog/uni-popup-dialog\" */ \"@/uni_modules/uni-popup/components/uni-popup-dialog/uni-popup-dialog.vue\"\n      )\n    },\n    uniRate: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-rate/components/uni-rate/uni-rate\" */ \"@/uni_modules/uni-rate/components/uni-rate/uni-rate.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = _vm.polyline.length\n  var g1 = g0 !== 0 ? _vm.threeRoadOne.length : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n        g1: g1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./road-map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./road-map.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"content\">\r\n    <!-- 顶部导航栏 -->\r\n    <l-tabs :list=\"headNavi\" activeTextColor=\"#4d4d4d\" textColor=\"#ffffff\" layout=\"scroll\" :lineShow=\"true\"\r\n      :lineCrude=\"6\" labelPadding=\"30\" bk=\"#47a6ff\" activeSize=\"16\" linePlace=\"30px\"\r\n      lineColor=\"linear-gradient(to right, #FF8008, 30%, #ffc837)\" @chooseTab=\"chooseTab\">\r\n    </l-tabs>\r\n\r\n    <!-- 通知栏 -->\r\n    <uni-notice-bar v-if=\"notice !== ''\" show-icon scrollable :text=\"notice\" />\r\n\r\n    <!-- 扫一扫 -->\r\n    <view class=\"scanBtn\" @click=\"scanBtn\">\r\n      <image src=\"~@/static/my-icons/scan1.png\" mode=\"\" style=\"width: 40px;height: 40px;\"></image>\r\n    </view>\r\n\r\n    <!-- 路线选择 -->\r\n    <uni-fab ref=\"fab\" :contentPath=\"roadContent\" :horizontal=\"'right'\" :direction=\"'vertical'\"\r\n      :show=\"isShowRoadContent\" @trigger=\"trigger\" />\r\n    <!-- 弹出框，具体路线信息 -->\r\n    <uni-popup ref=\"roadMsg\" type=\"bottom\">\r\n      <view class=\"roadContent\">\r\n        <!-- <vgt-tab :list=\"roadNameList\" @onValueChange=\"onValueChange\"></vgt-tab> -->\r\n        <view class=\"scenicCon\" v-if=\"polyline.length !== 0\">\r\n          <text v-if=\"spendTime !== ''\"\r\n            style=\"color: #47a6ff; font-weight: 700; font-size: 17px; text-align: center; margin-bottom: 5px;\">预计花费时间：{{spendTime}}分钟</text>\r\n          <!-- 景点进度条 -->\r\n          <uni-steps :options=\"threeRoadOne\" :active=\"activePoint\" @switchSpot=\"switchSpot\"></uni-steps>\r\n          <!-- 景点卡片 -->\r\n          <movable-swiper v-if=\"threeRoadOne.length !== 0\" ref=\"movableSwiper\" :dataList=\"threeRoadOne\"\r\n            :height=\"'150rpx'\" style=\"margin-top: 30px;\">\r\n            <template v-slot=\"{movSlotData}\">\r\n              <view v-if=\"movSlotData\" class=\"pointBox\">\r\n                <image class=\"pointBox_primary\" mode=\"scaleToFill\" :src=\"movSlotData.imgsUrl\" />\r\n                <view class=\"pointBox_msg\">\r\n                  <text class=\"movSlotDataName\">{{movSlotData.name}}</text>\r\n                  <xiaoStarComponent :starCount=\"movSlotData.score\"></xiaoStarComponent>\r\n                  <view class=\"more\" @click=\"toPointDetail(movSlotData.id)\">\r\n                    <text>详情</text>\r\n                    <image style=\"width: 20px;height: 20px;\" :src=\"'/static/my-icons/goIcon.png'\" />\r\n                  </view>\r\n                </view>\r\n                <view class=\"midmid\"\r\n                  @click=\"moveToLocation({longitude: movSlotData.longitude, latitude: movSlotData.latitude })\">\r\n                  <uni-icons class=\"fab-circle-icon\" type=\"navigate\" size=\"32\"></uni-icons>\r\n                  <text style=\"font-size: 10px;\">到这里去</text>\r\n                </view>\r\n              </view>\r\n            </template>\r\n          </movable-swiper>\r\n        </view>\r\n\r\n        <text v-else\r\n          style=\"color: #47a6ff; font-weight: 700; font-size: 20px; line-height: 400rpx; text-align: center;\">未选择路线</text>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- :enable-poi=\"false\"-->\r\n    <map id=\"map\" class=\"map\" scale=\"18\" min-scale=\"12\" max-scale=\"17\" show-compass=\"true\" show-scale=\"true\"\r\n      :show-location=\"true\" :polyline=\"polyline\" :enable-poi=\"false\" :latitude=\"'29.565137170757925'\"\r\n      :longitude=\"'115.9703530452523'\" @markertap=\"markertap\" @tap=\"tapMap\">\r\n    </map>\r\n\r\n    <!-- 中间导航岛组件 -->\r\n    <midTabbar @pageTabL=\"pageTabL\" @pageTabML=\"pageTabML\" @pageTabMM=\"pageTabMM\" @pageTabMR=\"pageTabMR\"></midTabbar>\r\n    <!-- 筛选想去的景点界面 -->\r\n    <zqs-select :list=\"wantToGoList\" :recommendations=\"recommendations\" label-key=\"name\" value-key=\"id\"\r\n      v-show=\"isShowModal=='true'\" v-model=\"checkPointList\" @search=\"searchEvent\" @change=\"selectChange2\"\r\n      @confirm=\"selectPoint\"></zqs-select>\r\n\r\n    <!-- 弹出框，景点简介 -->\r\n    <uni-popup ref=\"popupHi\" type=\"bottom\">\r\n      <view style=\"background-color: white; border-radius: 20px 20px 0px 0px; height: 400rpx;\">\r\n        <view style=\"padding-top: 5px\">\r\n          <hm-sms-list-card :options=\"options\" :isShowRate=\"false\"></hm-sms-list-card>\r\n\r\n          <view style=\"display: flex;justify-content: center;position: relative;\">\r\n            <text style=\"position: absolute; left: 20px; top: 20px; color: #47a6ff; font-weight: 700;\"> 景点当前人数</text>\r\n            <cmd-progress type=\"circle\" :percent=\"options.current/ options.capacity * 100\" stroke-color=\"#47a6ff\"\r\n              :stroke-width=\"12\" :width=\"70\" :showInfo=\"false\"></cmd-progress>\r\n            <view style=\"position: absolute;text-align: center;top: 45%;\">\r\n              <view style=\"font-size:15rpx;\">{{options.current}}/{{options.capacity}}</view>\r\n            </view>\r\n\r\n            <view class=\"goto\" @click=\"gotoPos(options.id)\">\r\n              <image src=\"~@/static/my-icons/goto.png\" mode=\"\" style=\"width: 35px;height: 35px;\"></image>\r\n              <text style=\"font-size: 15px;\">前往</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- 扫码好评 -->\r\n    <uni-popup ref=\"inputDialog\" type=\"dialog\">\r\n      <uni-popup-dialog ref=\"inputClose\" mode=\"input\" title=\"评价一下当前景点吧!\" @confirm=\"dialogInputConfirm\">\r\n        <view class=\"popupBox\">\r\n          <text>{{scanPoint.name}}</text>\r\n          <uni-rate allow-half :value=\"scanPoint.score\" />\r\n        </view>\r\n      </uni-popup-dialog>\r\n    </uni-popup>\r\n\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  const img = '../../static/place_icons/place02.png';\r\n  const locImg = '../../static/place_icons/locPosition.png';\r\n  import {\r\n    getSwiperList\r\n  } from '@/components/sn-swiper/esc-swiper/helper.js';\r\n  import {\r\n    mapGetters,\r\n    mapState,\r\n    mapMutations\r\n  } from 'vuex'\r\n  import midTabbar from '@/components/map_tabbar/map_tabbar.vue'\r\n  import movableSwiper from '@/components/movable-swiper/movable-swiper.vue'\r\n  import xiaoStarComponent from '@/components/xiao-star-component/xiao-star-component.vue'\r\n  import zqsSelect from '@/components/zqs-select/zqs-select.vue'\r\n  import HmSmsListCard from '@/components/hm-sms-list-card/index.vue'\r\n  import cmdProgress from \"@/components/cmd-progress/cmd-progress.vue\"\r\n  import roadApi from '@/api/roadApi.js'\r\n  import userApi from '@/api/userApi.js'\r\n  import attractionApi from '@/api/attractionApi.js'\r\n\r\n  const QQMapWX = require('../../libs/qqmap-wx-jssdk.js');\r\n  const qqmapsdk = new QQMapWX({\r\n    key: 'K7JBZ-VCBHQ-ET554-4CBVM-YLCXT-MGFNJ'\r\n  });\r\n\r\n\r\n  export default {\r\n    components: {\r\n      midTabbar,\r\n      movableSwiper,\r\n      xiaoStarComponent,\r\n      zqsSelect,\r\n      HmSmsListCard,\r\n      cmdProgress\r\n    },\r\n    computed: {\r\n      //默认的一些配置的数据\r\n      ...mapState('m_settings', ['headNavi', 'isShowModal', 'GroundOverlay']),\r\n      ...mapState('m_roadMsg', ['activePoint', 'roadList', , 'allPointList', 'pointList', 'road']),\r\n      ...mapState('m_user', ['userPosition', 'token', 'userinfo']),\r\n    },\r\n    watch: {\r\n      activePoint(newIndex, oldIndex) {\r\n        this.moveToLocation(this.threeRoadOne[newIndex])\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        pointCrowds: 50,\r\n        isGetLocation: false,\r\n        isShowRoadContent: false,\r\n        //获取景区人数的定时器\r\n        getCrowdsTimer: null,\r\n        //map上下文对象\r\n        _mapContext: '',\r\n        //所有景点数组\r\n        //路线数组\r\n        polyline: [],\r\n        //静态路线\r\n        staticRoad: {\r\n          roadList: []\r\n        },\r\n        //静态路线绘制点集数组\r\n        staticRoadPolyline: [],\r\n        //动态选择的路线的景点id\r\n        dynamicPoint: [],\r\n        //动态路线\r\n        dynamicRoad: [],\r\n        dynamicRoadPolyline: [],\r\n        //群组vip路线\r\n        vipRoad: [],\r\n        vipRoadPolyline: [],\r\n        vipRoadSpendTime: '',\r\n        //选择三种路线中的一种\r\n        threeRoadOne: [],\r\n        //路线花费时间\r\n        spendTime: '',\r\n        //当前定位的位置信息\r\n        position: {},\r\n        //消息\r\n        notice: \"\",\r\n        //点击景点弹出的详情弹框信息\r\n        options: {},\r\n        //推荐给游客想去的景点数\r\n        recommendations: [],\r\n        //筛选出的想去的景点的id数组\r\n        checkPointList: [],\r\n        //排序后的想去的景点的对象数组\r\n        sortCheckPointList: [],\r\n        //想去的点的数组\r\n        wantToGoList: [],\r\n        //景点实时人数数组\r\n        dynamicCrowds: [],\r\n        //扫码获取景点信息\r\n        scanPoint: {\r\n          id: '',\r\n          name: '',\r\n          score: 5,\r\n        },\r\n        roadContent: [{\r\n            iconPath: '/static/my-icons/default.png',\r\n            selectedIconPath: '/static/my-icons/default-select.png',\r\n            text: '默认线路',\r\n            active: false\r\n          },\r\n          {\r\n            iconPath: '/static/my-icons/dynamic.png',\r\n            selectedIconPath: '/static/my-icons/dynamic-select.png',\r\n            text: '动态线路',\r\n            active: false\r\n          },\r\n          {\r\n            iconPath: '/static/my-icons/vip-road.png',\r\n            selectedIconPath: '/static/my-icons/vip-road-select.png',\r\n            text: '精品线路',\r\n            active: false\r\n          }\r\n        ],\r\n      }\r\n    },\r\n\r\n    async onReady() {\r\n      let that = this\r\n      this._mapContext = uni.createMapContext(\"map\", this);\r\n\r\n      // 仅调用初始化，才会触发 on.(\"markerClusterCreate\", (e) => {})\r\n      this._mapContext.initMarkerCluster({\r\n        enableDefaultStyle: false,\r\n        zoomOnClick: true,\r\n        gridSize: 40,\r\n      });\r\n\r\n      //限制地图移动范围\r\n      // this.setMapBoundary()\r\n\r\n      //获取景点信息\r\n      attractionApi.getAttractionList(1, 50).then(res => {\r\n        this.updateAllPoints(res.data[0])\r\n      })\r\n\r\n      //获取景点实时人数\r\n      const res = await attractionApi.getDynamicAttractionInfo()\r\n      this.dynamicCrowds = res.data\r\n\r\n      //加标记点到地图上\r\n      this.addMarkers(this.allPointList);\r\n\r\n      //加上手绘地图\r\n      this.addGroundOverlay();\r\n\r\n      //获取用户当前位置\r\n      this.pageTabL()\r\n\r\n      this._mapContext.setLocMarkerIcon({\r\n        iconPath: '../../static/place_icons/locPosition.png'\r\n      });\r\n\r\n      if (this.userPosition !== '') this.addUserMarker(this.userPosition)\r\n\r\n      uni.connectSocket({\r\n        url: 'wss://www.expiredcanned.love/contact/' + this.userinfo.id,\r\n        header: {\r\n          'authorization': this.token,\r\n        },\r\n        success(res) {\r\n          console.log(res);\r\n        }\r\n      });\r\n      uni.onSocketMessage(function(res) {\r\n        console.log('收到服务器内容：' + res.data);\r\n        that.notice = JSON.parse(res.data).content\r\n      });\r\n\r\n    },\r\n\r\n    onLoad(option) {\r\n      let that = this\r\n      if (option.showStaticRoad === 'true') {\r\n        this.polyline = []\r\n        this.getStaticRoad(option.staticRoadId);\r\n      } else if (option.showStaticRoad === 'true') {\r\n\r\n      }\r\n\r\n      //获取景点实时人数\r\n      this.getCrowdsTimer = setInterval(() => {\r\n        // 在此处调用后端接口\r\n        attractionApi.getDynamicAttractionInfo().then(res => {\r\n          this.dynamicCrowds = res.data\r\n          console.log(res);\r\n        })\r\n      }, 1000 * 60 * 5); // 每隔5分钟访问一次接口\r\n    },\r\n\r\n    onUnload() {\r\n      uni.onSocketClose(function(res) {\r\n        console.log('WebSocket 已关闭！');\r\n      });\r\n      clearInterval(this.getCrowdsTimer);\r\n      this.getCrowdsTimer = null;\r\n    },\r\n\r\n    methods: {\r\n      ...mapMutations('m_roadMsg', ['saveActivePointToStorage', 'updateActivePoint', 'updatePointList',\r\n        'updateAllPoints'\r\n      ]),\r\n      ...mapMutations('m_settings', ['updateIsShowModal', 'updateRoadContent']),\r\n      ...mapMutations('m_user', ['saveUserPositionToStorage', 'updateUserPosition']),\r\n\r\n      //获取动态路线\r\n      async gotoPos(targetId) {\r\n        console.log(targetId);\r\n        console.log(this.userPosition);\r\n        const dynamicRoad = await roadApi.pathToSingleSource(this.userPosition.longitude, this.userPosition.latitude, targetId)\r\n        console.log(dynamicRoad);\r\n      },\r\n\r\n      //切换顶部导航栏\r\n      chooseTab(item) {\r\n        if (item.item === '景点') {\r\n          this.addMarkers(this.allPointList);\r\n        } else {\r\n          let tempPoint = this.allPointList.filter(obj => obj.category === item.item)\r\n          this.addMarkers(tempPoint);\r\n        }\r\n      },\r\n      //获取静态路线\r\n      getStaticRoad(id) {\r\n        this.spendTime = ''\r\n        let that = this\r\n        roadApi.getStaticRoadById(id).then(res => {\r\n          console.log(res);\r\n          this.staticRoad = res.data\r\n          this.threeRoadOne = res.data.roadList\r\n          this.roadContent.forEach(item => item.active = false)\r\n          this.roadContent[0].active = true\r\n          this.$refs.roadMsg.open()\r\n          for (let i = 0; i < this.staticRoad.roadList.length - 1; i++) {\r\n            let to = {},\r\n              from = {};\r\n            if (this.staticRoad.roadList[i + 1].name === \"三叠泉\") {\r\n              to = {\r\n                longitude: '116.024443',\r\n                latitude: '29.560302'\r\n              }\r\n            } else {\r\n              to = {\r\n                longitude: this.staticRoad.roadList[i + 1].longitude,\r\n                latitude: this.staticRoad.roadList[i + 1].latitude\r\n              }\r\n            }\r\n            if (this.staticRoad.roadList[i].name === \"三叠泉\") {\r\n              from = {\r\n                longitude: '116.024443',\r\n                latitude: '29.560302'\r\n              }\r\n            } else {\r\n              from = {\r\n                longitude: this.staticRoad.roadList[i].longitude,\r\n                latitude: this.staticRoad.roadList[i].latitude\r\n              }\r\n            }\r\n            //非企业用户限制并发访问量为5次/秒，设置延时访问\r\n            setTimeout(function() {\r\n              that.addPointPolyline(from, to)\r\n            }, ((i / 4) - 1) * 10000);\r\n          }\r\n\r\n          this.staticRoadPolyline = this.polyline\r\n        })\r\n      },\r\n\r\n      //获取两点之间的聚合点，为添加两点之间的路线使用\r\n      addPointPolyline(from, to) {\r\n        var that = this;\r\n        //调用距离计算接口\r\n        qqmapsdk.direction({\r\n          mode: 'walking', //可选值：'driving'（驾车）、'walking'（步行）、'bicycling'（骑行），不填默认：'driving',可不填\r\n          from,\r\n          to,\r\n          success: function(res) {\r\n            console.log(res.result.routes[0]);\r\n            var coors = res.result.routes[0].polyline,\r\n              pl = [];\r\n            //坐标解压（返回的点串坐标，通过前向差分进行压缩）\r\n            for (var i = 2; i < coors.length; i++) {\r\n              coors[i] = Number(coors[i - 2]) + Number(coors[i]) / 1000000;\r\n            }\r\n            //将解压后的坐标放入点串数组pl中\r\n            for (var i = 0; i < coors.length; i += 2) {\r\n              pl.push({\r\n                latitude: coors[i],\r\n                longitude: coors[i + 1]\r\n              })\r\n            }\r\n            that.addPolyline(pl)\r\n          },\r\n        });\r\n      },\r\n\r\n      //添加聚合点之间的路线\r\n      addPolyline(points) {\r\n        this.polyline.push({\r\n          points: points,\r\n          color: \"#47a6ff\",\r\n          width: 7,\r\n          arrowLine: true,\r\n          borderWidth: 1 //线的边框宽度，还有很多参数，请看文档 \r\n        })\r\n      },\r\n\r\n      //确认扫码好评\r\n      dialogInputConfirm(val) {\r\n        attractionApi.addNewScore(this.scanPoint.id, this.scanPoint.score).then(res => {\r\n          console.log(res);\r\n        })\r\n        // 关闭窗口后，恢复默认内容\r\n        this.$refs.inputDialog.close()\r\n      },\r\n\r\n      //点击扫一扫\r\n      scanBtn() {\r\n        let that = this\r\n        // 允许从相机和相册扫码\r\n        uni.scanCode({\r\n          success: function(res) {\r\n            try {\r\n              const data = JSON.parse(res.result);\r\n              that.scanPoint = data\r\n              console.log(that.scanPoint);\r\n              that.$refs.inputDialog.open()\r\n            } catch (e) {\r\n              uni.showToast({\r\n                title: \"数据获取失败！\",\r\n                duration: 2000\r\n              })\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      //将地图中心移置当前定位点\r\n      moveToLocation(e) {\r\n        console.log(e);\r\n        this._mapContext.moveToLocation({\r\n          longitude: parseFloat(e.longitude),\r\n          latitude: parseFloat(e.latitude),\r\n        })\r\n      },\r\n\r\n      //路线页面点击详情跳转景点\r\n      toPointDetail(id) {\r\n        uni.navigateTo({\r\n          url: '/subpkg/sub_pointDetail/sub_pointDetail?id=' + id\r\n        })\r\n      },\r\n\r\n      //点击景点卡片跳转详情页面\r\n      clickCard(e) {\r\n        console.log(e);\r\n        uni.navigateTo({\r\n          url: '/subpkg/sub_pointDetail/sub_pointDetail'\r\n        })\r\n      },\r\n\r\n      selectChange2() {\r\n        // 此处为点击的事件\r\n      },\r\n\r\n      //筛选想去的景点\r\n      selectPoint(uniqueIds) {\r\n        console.log(uniqueIds);\r\n        if(uniqueIds.length === 1) return  uni.showToast({icon:'none' ,title: '再选一个景点吧！',duration: 2000});\r\n        \r\n        this.sortCheckPointList = []\r\n        uniqueIds.forEach(item => {\r\n          let temp = {}\r\n          const checkPos = this.allPointList.find(pos => pos.id === item)\r\n          temp.name = checkPos.name\r\n          temp.id = checkPos.id\r\n          temp.location = {\r\n            lat: checkPos.latitude,\r\n            lng: checkPos.longitude\r\n          }\r\n          this.sortCheckPointList.push(temp)\r\n        })\r\n        this.getDistance(this.sortCheckPointList)\r\n      },\r\n\r\n      //事件触发，调用接口\r\n      async getDistance(to) {\r\n        var _this = this;\r\n        //调用距离计算接口\r\n        await qqmapsdk.calculateDistance({\r\n          //mode: 'driving',//可选值：'driving'（驾车）、'walking'（步行），不填默认：'walking',可不填\r\n          from: this.userPosition, //若起点有数据则采用起点坐标，若为空默认当前地址\r\n          to: to, //终点坐标\r\n          success: async function(res) { //成功后的回调\r\n            const result = res.result.elements\r\n            result.forEach((obj, index) => {\r\n              _this.sortCheckPointList[index].dis = obj.distance;\r\n            });\r\n            _this.sortCheckPointList.sort((a, b) => a.dis - b.dis);\r\n            console.log(_this.sortCheckPointList);\r\n            let pointIds = []\r\n            _this.sortCheckPointList.forEach(item => {\r\n              pointIds.push(item.id)\r\n            })\r\n\r\n            const {\r\n              data: vipRoadId\r\n            } = await roadApi.getVipRoad(pointIds)\r\n            console.log(vipRoadId);\r\n            _this.spendTime = vipRoadId.totalCost\r\n            _this.vipRoadSpendTime = vipRoadId.totalCost\r\n            _this.vipRoad = []\r\n            _this.polyline = []\r\n            vipRoadId.viaNodeIds.forEach(item => {\r\n              const pos = _this.allPointList.find(res => res.id === item)\r\n              _this.vipRoad.push(pos)\r\n            })\r\n            _this.roadContent.forEach(item => item.active = false)\r\n            _this.roadContent[2].active = true\r\n            _this.threeRoadOne = _this.vipRoad\r\n            _this.$refs.roadMsg.open()\r\n            for (var i = 0; i < _this.vipRoad.length - 1; i++) {\r\n              let to = {},\r\n                from = {};\r\n              if (_this.vipRoad[i + 1].name === \"三叠泉\") {\r\n                to = {\r\n                  longitude: '116.024443',\r\n                  latitude: '29.560302'\r\n                }\r\n              } else {\r\n                to = {\r\n                  longitude: _this.vipRoad[i + 1].longitude,\r\n                  latitude: _this.vipRoad[i + 1].latitude\r\n                }\r\n              }\r\n              if (_this.vipRoad[i].name === \"三叠泉\") {\r\n                from = {\r\n                  longitude: '116.024443',\r\n                  latitude: '29.560302'\r\n                }\r\n              } else {\r\n                from = {\r\n                  longitude: _this.vipRoad[i].longitude,\r\n                  latitude: _this.vipRoad[i].latitude\r\n                }\r\n              }\r\n              //非企业用户限制并发访问量为5次/秒，设置延时访问\r\n              setTimeout(function() {\r\n                _this.addPointPolyline(from, to)\r\n              }, ((i / 4) - 1) * 10000);\r\n            }\r\n            console.log(_this.vipRoad);\r\n            _this.vipRoadPolyline = _this.polyline\r\n          },\r\n        });\r\n        this.threeRoadOne = this.vipRoad\r\n        this.$refs.roadMsg.open()\r\n      },\r\n\r\n      //筛选想去的景点页面的搜索\r\n      searchEvent(val) {\r\n        this.wantToGoList = []\r\n        attractionApi.getAttractionByName(val, 1, 50).then(res => {\r\n          this.wantToGoList = [...this.wantToGoList, ...res.data[0]]\r\n        })\r\n      },\r\n\r\n      switchSpot(e) {\r\n        this.updateActivePoint(e)\r\n      },\r\n\r\n      // 改变路线当前景点信息\r\n      change() {\r\n        if (this.activePoint < this.pointList.length - 1) {\r\n          this.activePoint += 1\r\n        } else {\r\n          this.activePoint = 0\r\n        }\r\n      },\r\n\r\n      //选中路线事件\r\n      // onValueChange(e) {\r\n      //   this.updatePointList(e.currentItem)\r\n      //   console.log(e);\r\n      // },\r\n\r\n      //展开菜单点击事件，返回点击信息\r\n      trigger(e) {\r\n        this.updateActivePoint(0)\r\n        if (e.index === 0) {\r\n          this.spendTime = ''\r\n          this.polyline = this.staticRoadPolyline\r\n          this.threeRoadOne = this.staticRoad.roadList\r\n        } else if (e.index === 1) {\r\n          this.polyline = this.dynamicRoadPolyline\r\n          this.threeRoadOne = this.dynamicRoad\r\n        } else if (e.index === 2) {\r\n          this.spendTime = this.vipRoadSpendTime\r\n          this.polyline = this.vipRoadPolyline\r\n          this.threeRoadOne = this.vipRoad\r\n        }\r\n\r\n        console.log(this.threeRoadOne);\r\n        if (this.roadContent[e.index].active === false) {\r\n          this.roadContent.forEach(obj => {\r\n            obj.active = false\r\n          })\r\n          this.roadContent[e.index].active = !e.item.active\r\n        }\r\n        this.$refs.roadMsg.open()\r\n        this.$refs.fab.changeHide();\r\n      },\r\n\r\n      //点击导航岛最左侧,设置当前定位\r\n      pageTabL() {\r\n        let that = this\r\n        uni.getFuzzyLocation({\r\n          success: function(res) {\r\n            let pos = {\r\n              latitude: res.latitude,\r\n              longitude: res.longitude\r\n            }\r\n            // 2. 调用腾讯地图API查询位置所在城市\r\n            wx.request({\r\n              url: `https://apis.map.qq.com/ws/geocoder/v1/?location=${pos.latitude},${pos.longitude}&key=K7JBZ-VCBHQ-ET554-4CBVM-YLCXT-MGFNJ`,\r\n              success(res) {\r\n                const city = res.data.result.address_component.city;\r\n                // 3. 判断是否在庐山市\r\n                if (city.includes('庐山市')) {\r\n                  that.position = pos\r\n                  that.updateUserPosition(that.position)\r\n                  this.addUserMarker(that.position)\r\n                  console.log('当前位置在庐山市内');\r\n                } else {\r\n                  that.isGetLocation = true\r\n                  uni.showToast({\r\n                    title: '您当前的位置不在景区内请点击地图设置当前位置',\r\n                    duration: 4000,\r\n                    icon: 'none'\r\n                  })\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n\r\n      //点击地图获取经纬度\r\n      tapMap(e) {\r\n        this.viewshow = false // 隐藏信息框F\r\n        console.log('点击返回经纬度:', e.detail)\r\n        if (this.isGetLocation) {\r\n          this.position = e.detail\r\n          this.updateUserPosition(this.position)\r\n          this.addUserMarker(this.position)\r\n          this.isGetLocation = false\r\n        }\r\n      },\r\n\r\n      //点击导航岛中间左侧，跳转加团页面\r\n      pageTabML() {\r\n        uni.navigateTo({\r\n          url: '/subpkg/sub_addToGroup/sub_addToGroup'\r\n        })\r\n      },\r\n\r\n      //点击导航岛中间，跳转消息页面\r\n      pageTabMM() {\r\n        uni.navigateTo({\r\n          url: '/subpkg/sub_message/sub_message'\r\n        })\r\n      },\r\n\r\n      //点击导航岛中间右侧\r\n      async pageTabMR() {\r\n        this.wantToGoList = this.allPointList\r\n        this.recommendations = await userApi.getRecommendation()\r\n        this.recommendations.forEach((item, index) => {\r\n          this.$set(this.recommendations[index], 'checked', false)\r\n        })\r\n        this.updateIsShowModal('true')\r\n      },\r\n\r\n      //绘制用户当前位置的marker\r\n      addUserMarker(position) {\r\n        this._mapContext.removeMarkers({\r\n          markerIds: [999],\r\n          success: function(res) {\r\n            console.log(res);\r\n          }\r\n        })\r\n        this._mapContext.addMarkers({\r\n          markers: [{\r\n            id: 999,\r\n            latitude: position.latitude,\r\n            longitude: position.longitude,\r\n            iconPath: locImg,\r\n            width: 30,\r\n            height: 30,\r\n            anchor: {\r\n              x: .5,\r\n              y: .5\r\n            },\r\n          }],\r\n          clear: false,\r\n          complete(res) {\r\n            console.log('addMarkers', res)\r\n          }\r\n        })\r\n      },\r\n\r\n      //给地图添加标记点  \r\n      addMarkers(pointMarkers) {\r\n        console.log(pointMarkers);\r\n        const markers = []\r\n        pointMarkers.forEach((p, i) => {\r\n          let crowds = this.dynamicCrowds.find(item => item.attractionId === p.id)\r\n          markers.push({\r\n            id: p.id,\r\n            title: p.name,\r\n            latitude: p.latitude,\r\n            longitude: p.longitude,\r\n            joinCluster: true,\r\n            iconPath: img,\r\n            width: 25,\r\n            height: 25,\r\n            anchor: {\r\n              x: .5,\r\n              y: .5\r\n            },\r\n            callout: {\r\n              content: p.name,\r\n              color: crowds.current / crowds.capacity > 0.85 ? '#ffffff' : '#666',\r\n              // fontSize: 15,\r\n              borderRadius: 5,\r\n              bgColor: crowds.current / crowds.capacity > 0.85 ? '#e43d33' : '#ffffff',\r\n              // borderWidth: 10, \r\n              padding: 5,\r\n              textAlign: 'center',\r\n              display: 'ALWAYS',\r\n            },\r\n          })\r\n        })\r\n\r\n        this._mapContext.addMarkers({\r\n          markers,\r\n          clear: true,\r\n          complete(res) {\r\n            console.log('addMarkers', res)\r\n          }\r\n        })\r\n      },\r\n\r\n      //给地图添加自定义图层\r\n      addGroundOverlay() {\r\n        this.GroundOverlay.forEach(item => {\r\n          this._mapContext.addGroundOverlay(item);\r\n        })\r\n      },\r\n\r\n      //markers点击事件，点击标记点事件\r\n      markertap(e) {\r\n        if (e.detail.markerId === 999) return\r\n        const pos = this.allPointList.find(item => item.id === e.detail.markerId)\r\n        console.log(pos);\r\n        const crowds = this.dynamicCrowds.find(item => item.attractionId === pos.id)\r\n        this.options = {\r\n          id: pos.id,\r\n          primary: pos.imgsUrl,\r\n          openNote: pos.openNote,\r\n          paybak: pos.name,\r\n          score: pos.score,\r\n          capacity: crowds.capacity,\r\n          current: crowds.current,\r\n          txt: '详情',\r\n          side: '/static/hm-sms-list-card/images/img_25832_0_0.png'\r\n        }\r\n        this.$refs.popupHi.open()\r\n      },\r\n\r\n      //限制地图移动范围\r\n      setMapBoundary() {\r\n        let southwest = {\r\n          //southwest\r\n          longitude: 115.879179,\r\n          latitude: 29.493921,\r\n        }\r\n        let northeast = {\r\n          //northeast\r\n          longitude: 116.055004,\r\n          latitude: 29.576550,\r\n        }\r\n        let that = this\r\n        this._mapContext.setBoundary({\r\n          southwest,\r\n          northeast,\r\n          success: function(res) {\r\n            that._mapContext.moveToLocation({\r\n              latitude: (southwest.latitude + northeast.latitude) / 2,\r\n              longitude: (southwest.longitude + northeast.longitude) / 2,\r\n              scale: 10\r\n            })\r\n          }\r\n        })\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import './road_map.scss';\r\n</style>","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--8-oneOf-1-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-2!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--8-oneOf-1-3!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\sass-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-4!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-5!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./road-map.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--8-oneOf-1-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-2!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--8-oneOf-1-3!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\sass-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-4!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-5!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./road-map.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1681450607708\n      var cssReload = require(\"D:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}